[{"content":"Education Ungraduate School Shanghai Jiao Tong University Degree：Bachelor Major：Computer Science Date：2019-9-1 to 2023-6-30 Award：2019, 2020, 2021 SJTU Honor Award Award：Outstanding Graduates Relevant coursework Data Science, Artificial Intelligence, Data Structure, Algorithm, Database, Machine Learning, Computer Network, Software Engineer Graduate School University of California, Los Angeles Degree：Master Major：Computer Science Date：2023-9-1 to 2025-5-1 Relevant coursework Reinforcement Learning, Big Data Analysis, Automatic Reasoning Activity SJTU Deputy Director of the Social Practice Department of the Youth League Committee\nUCLA Waiting to be filled\n","date":"2023-09-01T00:00:00Z","image":"https://yiwenlong2001.github.io/p/education/ucla_hueb66c70f98b40f4c1056d1dc09470407_175613_120x120_fill_q75_box_smart1.jpg","permalink":"https://yiwenlong2001.github.io/p/education/","title":"Education"},{"content":"• Interned at the DevOps team to improve developer efficiency for Microsoft Dynamics 365 Product Line\n• Designed and developed a frontend banner extension in the MS Azure DevOps Server that displays work reminders, including release cycles and feature requests for Azure developers\n• Implemented a TypeScript and React-based extension enabling organization administrators to upload work reminders, visible to developers on corresponding repository pages\n• Acquired hands-on experience in the end-to-end development process within the Azure DevOps environment\n• Github Repo Link ","date":"2022-08-01T00:00:00Z","image":"https://yiwenlong2001.github.io/p/micro/microsoft_hu0661c11918da8d55005cc7abc2c31fa7_140150_120x120_fill_q75_box_smart1.jpg","permalink":"https://yiwenlong2001.github.io/p/micro/","title":"Microsoft"},{"content":"","date":"2021-12-15T00:00:00Z","image":"https://yiwenlong2001.github.io/p/proof-of-uniqueness-of-the-entropy-formula/entropy_hu67f5226b2bc7a35d1cc75de0da216e33_7981_120x120_fill_q75_box_smart1.jpg","permalink":"https://yiwenlong2001.github.io/p/proof-of-uniqueness-of-the-entropy-formula/","title":"Proof of uniqueness of the entropy formula"},{"content":"Cluster Algorithm_1 K-means randomly choose initial cluster centroics. assign each point to its nearset centroic. do iteration until the location of any centroics does not change: caluculate the mean value for every point of each cluster. relocate every point. Algorithm_2 PAM Arbitrarily choose k objects as the initial medoids Until no change, do (Re)assign each object to the cluster to which the nearest medoid Randomly select a non-medoid object o’, compute the total cost, S, of swapping medoid o with o’ If S \u0026lt; 0 then swap o with o’ to form the new set of k medoids Swapping Cost: Measure whether o’ is better than o as a medoid\nAlgorithm_3 CLARA random sample in huge data do PAM PAM search the whole graph\nCLARA search some random sub-graphs\nAlgorithm_4 Hierarchical Clustering AGNES (agglomerative) Initially, each object is a cluster Step-by-step cluster merging, until all objects form a cluster DIANA (divisive) Initially, all objects are in one cluster Step-by-step splitting clusters until each cluster contains only one object More Details Single-Link（最短距离链接）： Single-Link聚类方法将两个簇之间的距离定义为它们中最接近的两个点之间的距离。换句话说，它测量了两个簇中最相似的成员之间的距离。这种方法倾向于形成具有长而窄的簇，因为它强调了局部相似性。Single-Link在处理非凸形状的簇时表现良好，但容易受到噪声和异常值的影响。\nComplete-Link（最长距离链接）： Complete-Link聚类方法将两个簇之间的距离定义为它们中最不相似的两个点之间的距离。它关注的是两个簇中最不相似的成员之间的距离。这种方法更倾向于形成具有更紧凑形状的簇，因为它强调了簇的全局相似性。Complete-Link对于处理不同大小和不同密度的簇效果较好，但可能会受到异常值的干扰。\nAlgorithm_5 BIRCH Clustering Feature: CF = (N, LS, SS)\nN: #data points\nLS: sum of position\nSS: sum of the square of the position\nPhase 1: scan DB to build an initial inmemory CF tree (a multi-level compression of the data that tries to preserve the inherent clustering structure of the data) Phase 2: use an arbitrary clustering algorithm to cluster the leaf nodes of the CF-tree 一开始只有一个空的root，然后一个一个加进去，如果在已有节点的球体内，则合为一个cluster，如果一个cluster超过一定数量，则分裂：选择最远两个点最为两个新的cluster中心点，重新分配，保证树结构完整性。\nAlgorithm_6 Distance-based Methods Previous Knowledge Eps: Maximum radius of the neighborhood MinPts: Minimum number of points in an Eps- neighborhood of that point NEps(p): {q | dist(p,q) $\\leq$ Eps} Core object p: |Neps(p)| $\\ge$ MinPts Point q directly density-reachable from p iff q $\\in$ Neps(p) and p is a core object Density-reachable: p1 $\\rightarrow$ p2, p2 $\\rightarrow$ p3, \u0026hellip;, pn-1 $\\rightarrow$ pn then pn is density-reachable from p1 Density-connected: Points p, q are density-reachable from o $\\rightarrow$ p and q are density-connected DBSCAN Arbitrary select a point p Retrieve all points directly density-reachable from p wrt Eps and MinPts If p is a core point, a cluster is formed If p is a border point, no points are density- reachable from p and DBSCAN visits the next point of the database Continue the process until all of the points have been processed P.S. 一个一个判断，如果是cluster，且范围内点已形成cluster，则加入，若无先前cluster，则新建立一个。若是后建立的和之前建立的通过一个点reachable了，则将两个cluster合为一个。\n","date":"2023-10-26T00:00:00Z","image":"https://yiwenlong2001.github.io/p/cluster-review-notes-updating.../cluster_hu1f07f723625917ab4cca27f0b859a725_368923_120x120_fill_q75_box_smart1.jpg","permalink":"https://yiwenlong2001.github.io/p/cluster-review-notes-updating.../","title":"Cluster review notes (updating...)"},{"content":" Employed warp-level primitives to optimize warp reduce of Softmax Kernel, which improved efficiency by 7% Implemented matrix multiplication kernel with matrix chunking and shared memory in C and CUDA Optimized shared memory access via vector read instruction LDS.128, resulting in a 3% efficiency improvement Github Repo Link Docs Link ","date":"2022-12-25T00:00:00Z","image":"https://yiwenlong2001.github.io/p/pytorch-cuda-operators-parallelism-implementation-and-optimization/GPU_hu335b1d50c3a8ce5c3c8e0318271e4bf3_147350_120x120_fill_q75_box_smart1.jpg","permalink":"https://yiwenlong2001.github.io/p/pytorch-cuda-operators-parallelism-implementation-and-optimization/","title":"PyTorch CUDA Operators Parallelism Implementation and Optimization"},{"content":" Proposed EMAT, an End-to-end Multi-view Association Tracker for multi-object tracking, which jointly performed 3D detection and tracking from multi-camera and multi-frame images Achieved the best performance of camera-based 3D tracking performance for about 0.49 in AMOTA and compared favorablywith the state-of-the-art 3D detection methods like BEVFormer and DETR3D Proficient in software development methodologies, including Git and Git Flow, for version control, collaborative coding, and efficient workflow management ","date":"2022-11-01T00:00:00Z","image":"https://yiwenlong2001.github.io/p/huawei-2012-lab/huawei_huae243c304af4a8913b8770a9030af3d3_42071_120x120_fill_q75_box_smart1.jpg","permalink":"https://yiwenlong2001.github.io/p/huawei-2012-lab/","title":"Huawei 2012 Lab"},{"content":" Contributed to an adolescent scoliosis correction system using pedicle screws Utilized Unity to develop a magnetic sensing software that locates pedicle screws in adolescents with spinal disorders and visualize spine morphology in order to supervise the recovery process Exhibited at the 2022 Hong Kong Innovation \u0026amp; Technology Carnival ","date":"2022-03-01T00:00:00Z","image":"https://yiwenlong2001.github.io/p/hku/HKU_hu396e5bbe93d4ba6a3e8cbbc038b1b154_75183_120x120_fill_q75_box_smart1.jpg","permalink":"https://yiwenlong2001.github.io/p/hku/","title":"The University of Hong Kong"}]